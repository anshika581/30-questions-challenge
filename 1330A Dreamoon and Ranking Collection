import java.util.*;
 
public class GFG {
	public static void main (String[] args) {
	    Scanner scn = new Scanner(System.in);
	    int T = scn.nextInt();
	    while(T-- > 0){
	        int N = scn.nextInt();
	        int X = scn.nextInt();
	        int[] arr = new int[N];
	        for(int i = 0; i < N; i++) arr[i] = scn.nextInt();
	        Arrays.sort(arr);
	        solve(X, N, arr);
	    }
	}
	
	public static void solve(int X, int N, int[] arr){
        
        int ans = 0;
	    for(int V = 1; V <= N+X; V++){
	        if(possible(V, X, N, arr)) ans = V;
	        else break;
	    }
	    
	    System.out.println(ans);
	}
	
	public static boolean possible(int V, int X, int N, int[] arr){
	    int missing = 0;
	    int idx = 0;
	   
	    for(int i = 1; i <= V; i++){
	        if(idx < N && arr[idx] == i){
	            while(idx < N && arr[idx] == i) idx++;
	        } else missing++;
	    }
	    
	    return (missing <= X);
	}
}
